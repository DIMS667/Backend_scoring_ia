# Generated by Django 5.2.7 on 2025-10-12 22:57

import core.validators
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('CLIENT', 'Client'), ('AGENT', 'Agent Bancaire')], default='CLIENT', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[core.validators.validate_phone_number])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cni_number', models.CharField(max_length=50, unique=True, validators=[core.validators.validate_cni_number], verbose_name='Numéro CNI')),
                ('birth_date', models.DateField(verbose_name='Date de naissance')),
                ('birth_place', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('marital_status', models.CharField(choices=[('SINGLE', 'Célibataire'), ('MARRIED', 'Marié(e)'), ('DIVORCED', 'Divorcé(e)'), ('WIDOWED', 'Veuf/Veuve')], default='SINGLE', max_length=20)),
                ('dependents', models.IntegerField(default=0, verbose_name='Nombre de personnes à charge')),
                ('address', models.TextField(verbose_name='Adresse complète')),
                ('city', models.CharField(default='Yaoundé', max_length=100)),
                ('employment_status', models.CharField(choices=[('EMPLOYEE', 'Salarié'), ('CIVIL_SERVANT', 'Fonctionnaire'), ('SELF_EMPLOYED', 'Indépendant'), ('UNEMPLOYED', 'Sans emploi')], max_length=20)),
                ('employer', models.CharField(blank=True, max_length=200)),
                ('job_title', models.CharField(blank=True, max_length=100, verbose_name='Fonction')),
                ('sector', models.CharField(blank=True, max_length=100, verbose_name="Secteur d'activité")),
                ('seniority_years', models.DecimalField(decimal_places=1, default=0, max_digits=4, verbose_name='Ancienneté (années)')),
                ('monthly_income', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Revenu mensuel net (FCFA)')),
                ('existing_credits', models.IntegerField(default=0, verbose_name='Nombre de crédits en cours')),
                ('monthly_debt_payment', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Mensualités totales (FCFA)')),
                ('bank_seniority_months', models.IntegerField(default=0, verbose_name='Ancienneté banque (mois)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil Client',
                'verbose_name_plural': 'Profils Clients',
                'db_table': 'client_profiles',
            },
        ),
    ]
